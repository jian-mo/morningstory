version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: morning-story-postgres
    environment:
      POSTGRES_USER: morning_story
      POSTGRES_PASSWORD: morning_story_dev
      POSTGRES_DB: morning_story_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U morning_story"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: morning-story-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.dev
      target: development
    container_name: morning-story-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://morning_story:morning_story_dev@postgres:5432/morning_story_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_change_in_production
    volumes:
      - ./apps/api:/app/apps/api
      - ./libs:/app/libs
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev:api

volumes:
  postgres_data:
  redis_data: